#!/usr/bin/env python
##
# hachoir-subfile helper
# find and extract subfiles with hachoir and dd
# https://github.com/deadbits
##
import os
import sys
import commands


def hachoir(file_name):
    offset = None
    limit = None

    out = commands.getoutput('hachoir-subfile %s' % file_name)

    for line in out.splitlines():
        if '[+] File at' in line and '[+] File at 0 size' not in line:
            offset = line.split('at ')[1].split(' size')[0]
            size = line.split('size=')[1].split(' (')[0]
            limit = offset + size

    return (offset, limit)


def dd(offset, limit, file_name):
    out = commands.getoutput('dd bs=1 skip=%s count=%s if=%s of=%s-dump' % (offset, limit, file_name, file_name))
    print out


if __name__ == '__main__':
    try:
        file_name = sys.argv[1]
    except IndexError:
        print('usage: extract-subfile.py <file name>')
        sys.exit(0)

    offset, limit = hachoir(file_name)

    if offset is not None and limit is not None:
        dd(offset, limit, file_name)
